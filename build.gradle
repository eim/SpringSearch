buildscript {
	ext {
		springBootVersion = '1.3.6.RELEASE'
		hibernateVersion = '5.2.1.Final'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
	baseName = 'springsearch'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/itest/java')
		}
		resources.srcDir file('src/itest/resources')
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
	compile("org.hibernate:hibernate-search-orm:${hibernateVersion}")
	compile "mysql:mysql-connector-java"
	compile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'
	testCompile('org.springframework:spring-test')
	testCompile("junit:junit:4.12")
	testCompile('org.mockito:mockito-core')
	testCompile("org.hsqldb:hsqldb:2.3.3")
	testCompile('org.springframework:spring-test')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.connect-group:thymeleaf-tdd:+')
}

task integrationTest(type: Test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
}

processResources {
	filesMatching('*.properties') {
		expand(project.properties)
	}
}

task buildDocker(type: Exec, dependsOn: [build]) {
	commandLine "docker", "build", "-t", "${jar.baseName}:latest", "."
	doFirst {
		copy {
			from jar
			into 'src/main/docker/'
		}
		workingDir 'src/main/docker'
	}
	doLast {
		delete jar
		workingDir '../../..'
	}
}

ext.extProperties = new Properties()
extProperties.load(project.file('src/main/resources/application.properties').newDataInputStream())

task runDocker(type: Exec, dependsOn: []) {
	commandLine "docker", "run", "-it", "--name=${jar.baseName}", "-e",
	"MYSQL_ALLOW_EMPTY_PASSWORD=yes", "-p", "33306:3306", "-p", "8090:8080", "-v",
	"${extProperties['source.files.directory']}:/tmp/FullTestIndex/files/", "-d", "${jar.baseName}:latest"
}
